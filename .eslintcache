[{"/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/App.js":"1","/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/config/api.js":"2","/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/pages/Contact/Contact.js":"3","/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/BookingForm.js":"4","/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/pages/EditBooking.js":"5","/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/pages/Services/DeleteService.js":"6","/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/pages/Services/Services.js":"7","/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/pages/Services/EditService.js":"8","/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/pages/AdminBookings.js":"9","/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/pages/Services/NewService.js":"10"},{"size":3392,"mtime":1612851267493,"results":"11","hashOfConfig":"12"},{"size":71,"mtime":1612773892723,"results":"13","hashOfConfig":"12"},{"size":5168,"mtime":1612836483618,"results":"14","hashOfConfig":"12"},{"size":5804,"mtime":1612845360363,"results":"15","hashOfConfig":"12"},{"size":6872,"mtime":1612836483642,"results":"16","hashOfConfig":"12"},{"size":3422,"mtime":1612836483720,"results":"17","hashOfConfig":"12"},{"size":2535,"mtime":1612851666769,"results":"18","hashOfConfig":"12"},{"size":3727,"mtime":1612836483744,"results":"19","hashOfConfig":"12"},{"size":956,"mtime":1612836483547,"results":"20","hashOfConfig":"12"},{"size":3284,"mtime":1612851999415,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1tszz9x",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/App.js",["44"],"/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/config/api.js",[],["45","46"],"/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/pages/Contact/Contact.js",["47","48"],"/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/BookingForm.js",["49","50","51","52","53"],"/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/pages/EditBooking.js",["54","55","56","57","58","59","60"],"import React, {useState, useEffect} from \"react\"\nimport Select from 'react-select'\n\nfunction EditBooking(props) {\n  const [state, setState] = useState({\n    first_name: '',\n    last_name: '',\n    phonenumber: '',\n    email: '',\n    address: '',\n    notes: '',\n    service_id: null,\n    suburb_id: null,\n    // suburbs: [],\n    // optionsServices: [],\n    postcode: '4000',\n    booking_date: '',\n    suburb: {value: \"\", label: \"\"},\n    service: {value: \"\", label: \"\"}\n  })\n\n  const [services, setServices] = useState([])\n  const [suburbs, setSuburbs] = useState([])\n\n  const handleOptions = selectedService => {\n    let newState = {...state}\n    setState({...newState, service_id: selectedService.value})\n}\n\n  const handleSuburb = selectedSuburb => {\n    let newState = {...state}\n    setState({...newState, suburb_id: selectedSuburb.value})\n  }\n\n  const handleChange = (event) => {\n    let name = event.target.name\n    let value = event.target.value\n    let newState = {...state}\n    setState({...newState, [name]: value})\n}\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    let ph = state.phonenumber\n    if (!Number(ph)) {\n        alert(\"Phone must be a number\")\n    }\n    fetch('https://larryslawncare.herokuapp.com/bookings/' + state.id, {\n      method: 'PUT',\n      body: JSON.stringify(state),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => {\n        if (response.status == 204) {\n            props.history.push(\"/bookings\")\n        } else {\n          alert(\"Please fill in all fields\")\n        }\n    })\n  }\n  \n  useEffect(() => {\n    const {suburb_id, suburb, service, service_id} = state\n    if (suburb_id != null && suburb.value == \"\" && suburbs.length > 0) {\n      const found = suburbs.find(suburb => suburb.value == suburb_id);\n      setState({...state, suburb: found})\n    }\n    if (service_id != null && service.value == \"\" && services.length > 0) {\n      const foundservice = services.find(service => service.value == service_id);\n      setState({...state, service: foundservice})\n    }\n  })\n\n  // useEffect(() => {\n  //   const {service_id, service} = state\n  //   if (service_id != null && service.value == \"\") {\n  //     const foundservice = services.find(service => service.value == service_id);\n  //     setState({...state, service: foundservice})\n  //   }\n  // }, [state.service_id])\n\n  useEffect(() => {\n    fetch('https://larryslawncare.herokuapp.com/services')\n    .then(result => result.json())\n    .then(data => {\n      let array = []\n      data.forEach((element) => {\n        array.push({\n          value: element.id,\n          label: element.service_name\n        })\n      })\n      setServices(array)\n    })\n\n    fetch('https://larryslawncare.herokuapp.com/suburbs')\n    .then(result => result.json())\n    .then (data => {\n        let array = []\n        data.forEach((element) => {\n        array.push({\n            value: element.id,\n            label: element.name\n        })\n        })\n        setSuburbs(array)\n    })\n\n    fetch(`https://larryslawncare.herokuapp.com/bookings/${props.match.params.id}`)\n    .then(result => result.json())\n    .then(booking => {\n      setState({...state, ...booking})\n    })\n  }, [])\n\n\n\n  return (\n    <div className=\"bookingForm\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"one-half column\">\n              <label htmlFor=\"first_name\">\n                First Name\n              </label>\n              <input \n                className=\"u-full-width\"\n                type=\"text\" \n\n                name=\"first_name\" \n                id=\"first_name\"\n                onChange={handleChange}\n                value={state.first_name}\n              />\n              <label htmlFor=\"last_name\">\n                Last Name\n              </label>\n              <input \n                className=\"u-full-width\"\n                type=\"text\" \n                name=\"last_name\"  \n                id=\"last_name\" \n                onChange={handleChange}\n                value={state.last_name}\n              />\n              <label htmlFor=\"phonenumber\">\n                Phone\n              </label>\n              <input \n                className=\"u-full-width\"\n                type=\"tel\" \n                name=\"phonenumber\"  \n                id=\"phonenumber\" \n                onChange={handleChange}\n                value={state.phonenumber}\n              />\n              <label htmlFor=\"email\">\n                Email\n              </label>\n              <input \n              className=\"u-full-width\"\n              type=\"email\" \n              name=\"email\"  \n              id=\"email\"\n                onChange={handleChange}\n                value={state.email} \n              />\n              <label htmlFor=\"address\">\n                Address\n              </label>\n              <input \n                className=\"u-full-width\"\n                type=\"text\" \n                name=\"address\"  \n                id=\"address\"\n                onChange={handleChange} \n                value={state.address}\n              />\n              <label htmlFor=\"suburb_id\">\n                Suburb\n              </label>\n              <Select \n                  className=\"u-full-width\"\n                  onChange={handleSuburb}\n                  name=\"suburb_id\"\n                  options={suburbs}\n                  value={state.suburb}\n              >\n              </Select>\n            </div>\n            <div className=\"one-half column\">\n              <label htmlFor=\"service_id\">\n                Services required\n              </label>\n              <Select \n                  className=\"u-full-width\"\n                  onChange={handleOptions}\n                  name=\"service_id\"\n                  options={services}\n                  placeholder=\"Select all services required\"\n                  value={state.service}\n              />\n              <label htmlFor=\"booking_date\">\n                    Date\n                  </label>\n                  <input \n                    className=\"u-full-width\"\n                    type=\"date\" \n                    name=\"booking_date\"  \n                    id=\"booking_date\" \n                    onChange={handleChange}\n                    value={state.booking_date}\n                  />\n              <label htmlFor=\"notes\">\n                Notes\n              </label>\n              <textarea \n                  className=\"u-full-width\" \n                  name=\"notes\"\n                  onChange={handleChange}\n                  value={state.notes || \"\"}\n              /> \n              <input \n                  className=\"button-primary\" \n                  type=\"submit\" \n                  value=\"Submit\" \n              />\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default EditBooking;","/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/pages/Services/DeleteService.js",["61"],"/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/pages/Services/Services.js",[],"/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/pages/Services/EditService.js",[],"/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/pages/AdminBookings.js",["62","63","64","65","66","67"],"/mnt/c/Users/break/Documents/coder/Assignment/Assignment_T3A2-A/T3A2_B_frame/src/components/pages/Services/NewService.js",["68","69"],{"ruleId":"70","severity":1,"message":"71","line":18,"column":8,"nodeType":"72","messageId":"73","endLine":18,"endColumn":17},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":49,"column":93,"nodeType":"80","endLine":49,"endColumn":108},{"ruleId":"78","severity":1,"message":"79","line":52,"column":100,"nodeType":"80","endLine":52,"endColumn":115},{"ruleId":"70","severity":1,"message":"81","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":14},{"ruleId":"70","severity":1,"message":"82","line":3,"column":16,"nodeType":"72","messageId":"73","endLine":3,"endColumn":19},{"ruleId":"70","severity":1,"message":"83","line":3,"column":21,"nodeType":"72","messageId":"73","endLine":3,"endColumn":30},{"ruleId":"70","severity":1,"message":"84","line":3,"column":32,"nodeType":"72","messageId":"73","endLine":3,"endColumn":35},{"ruleId":"70","severity":1,"message":"85","line":92,"column":13,"nodeType":"72","messageId":"73","endLine":92,"endColumn":28},{"ruleId":"86","severity":1,"message":"87","line":56,"column":29,"nodeType":"88","messageId":"89","endLine":56,"endColumn":31},{"ruleId":"90","severity":1,"message":"91","line":64,"column":3,"nodeType":"72","endLine":64,"endColumn":12,"suggestions":"92"},{"ruleId":"86","severity":1,"message":"87","line":66,"column":43,"nodeType":"88","messageId":"89","endLine":66,"endColumn":45},{"ruleId":"86","severity":1,"message":"87","line":67,"column":57,"nodeType":"88","messageId":"89","endLine":67,"endColumn":59},{"ruleId":"86","severity":1,"message":"87","line":70,"column":45,"nodeType":"88","messageId":"89","endLine":70,"endColumn":47},{"ruleId":"86","severity":1,"message":"87","line":71,"column":67,"nodeType":"88","messageId":"89","endLine":71,"endColumn":69},{"ruleId":"90","severity":1,"message":"93","line":116,"column":6,"nodeType":"94","endLine":116,"endColumn":8,"suggestions":"95"},{"ruleId":"90","severity":1,"message":"96","line":42,"column":8,"nodeType":"94","endLine":42,"endColumn":10,"suggestions":"97"},{"ruleId":"70","severity":1,"message":"98","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":23},{"ruleId":"70","severity":1,"message":"99","line":2,"column":25,"nodeType":"72","messageId":"73","endLine":2,"endColumn":30},{"ruleId":"70","severity":1,"message":"100","line":2,"column":32,"nodeType":"72","messageId":"73","endLine":2,"endColumn":36},{"ruleId":"70","severity":1,"message":"101","line":2,"column":38,"nodeType":"72","messageId":"73","endLine":2,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":21,"column":31,"nodeType":"88","messageId":"89","endLine":21,"endColumn":33},{"ruleId":"86","severity":1,"message":"102","line":23,"column":64,"nodeType":"88","messageId":"89","endLine":23,"endColumn":66},{"ruleId":"70","severity":1,"message":"103","line":55,"column":13,"nodeType":"72","messageId":"73","endLine":55,"endColumn":27},{"ruleId":"70","severity":1,"message":"104","line":59,"column":11,"nodeType":"72","messageId":"73","endLine":59,"endColumn":28},"no-unused-vars","'DashBoard' is defined but never used.","Identifier","unusedVar","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Form' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'selectedService' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setState'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [state, suburbs, services] as a second argument to the useEffect Hook.",["107"],"React Hook useEffect has missing dependencies: 'props.match.params.id' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["109"],"'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","Expected '!==' and instead saw '!='.","'loggedInStatus' is assigned a value but never used.","'handleLogoutClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Add dependencies array: [state, suburbs, services]",{"range":"116","text":"117"},"Update the dependencies array to be: [props.match.params.id, state]",{"range":"118","text":"119"},"Update the dependencies array to be: [props.match.params.id]",{"range":"120","text":"121"},[2073,2073],", [state, suburbs, services]",[3210,3212],"[props.match.params.id, state]",[1875,1877],"[props.match.params.id]"]